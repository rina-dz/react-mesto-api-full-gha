{"ast":null,"code":"import _classCallCheck from\"C:/Users/\\u0410\\u0440\\u0438\\u043D\\u0430/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/\\u0410\\u0440\\u0438\\u043D\\u0430/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var authenticationApi=/*#__PURE__*/function(){function authenticationApi(data){_classCallCheck(this,authenticationApi);this.baseUrl=data.baseUrl;}_createClass(authenticationApi,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}},{key:\"_request\",value:function _request(url,options){return fetch(url,options).then(this._checkResponse);}//регистрация \n},{key:\"registration\",value:function registration(info){var newEmail=info.email;var newPassword=info.password;return this._request(\"\".concat(this.baseUrl,\"/signup\"),{method:'POST',headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({\"password\":newPassword,\"email\":newEmail})});}//авторизация \n},{key:\"authorization\",value:function authorization(password,email){return this._request(\"\".concat(this.baseUrl,\"/signin\"),{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify({password:password,email:email})});}//проверка валидности токена и получение email для вставки в шапку сайта\n},{key:\"tokenValidityCheck\",value:function tokenValidityCheck(token){return this._request(\"\".concat(this.baseUrl,\"/users/me\"),{method:'GET',headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}});}}]);return authenticationApi;}();var newAuthApi=new authenticationApi({baseUrl:'https://auth.nomoreparties.co'});export{newAuthApi};","map":{"version":3,"names":["authenticationApi","data","_classCallCheck","baseUrl","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","_request","url","options","fetch","then","registration","info","newEmail","email","newPassword","password","method","headers","body","JSON","stringify","authorization","tokenValidityCheck","token","newAuthApi"],"sources":["C:/Users/Арина/react-mesto-api-full-gha/frontend/src/utils/authenticationApi.js"],"sourcesContent":["class authenticationApi {\r\n    constructor(data) {\r\n        this.baseUrl = data.baseUrl;\r\n    }\r\n\r\n    _checkResponse(res) {\r\n        if (res.ok) {\r\n            return res.json()\r\n        } else {\r\n            return Promise.reject(`Ошибка: ${res.status}`);\r\n        }\r\n    }\r\n\r\n\r\n    _request(url, options) {\r\n        return fetch(url, options).then(this._checkResponse)\r\n    }\r\n\r\n\r\n    //регистрация \r\n    registration(info) {\r\n        const newEmail = info.email;\r\n        const newPassword = info.password;\r\n        return this._request(`${this.baseUrl}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"password\": newPassword,\r\n                \"email\": newEmail\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    //авторизация \r\n    authorization(password, email) {\r\n        return this._request(`${this.baseUrl}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({password, email})\r\n        })\r\n    }\r\n\r\n\r\n    //проверка валидности токена и получение email для вставки в шапку сайта\r\n    tokenValidityCheck(token) {\r\n        return this._request(`${this.baseUrl}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst newAuthApi = new authenticationApi({\r\n    baseUrl: 'https://auth.nomoreparties.co'\r\n})\r\n\r\nexport { newAuthApi };"],"mappings":"+TAAM,CAAAA,iBAAiB,yBACnB,SAAAA,kBAAYC,IAAI,CAAE,CAAAC,eAAA,MAAAF,iBAAA,EACd,IAAI,CAACG,OAAO,CAAGF,IAAI,CAACE,OAAO,CAC/B,CAACC,YAAA,CAAAJ,iBAAA,GAAAK,GAAA,kBAAAC,KAAA,CAED,SAAAC,eAAeC,GAAG,CAAE,CAChB,GAAIA,GAAG,CAACC,EAAE,CAAE,CACR,MAAO,CAAAD,GAAG,CAACE,IAAI,EAAE,CACrB,CAAC,IAAM,CACH,MAAO,CAAAC,OAAO,CAACC,MAAM,0CAAAC,MAAA,CAAYL,GAAG,CAACM,MAAM,EAAG,CAClD,CACJ,CAAC,GAAAT,GAAA,YAAAC,KAAA,CAGD,SAAAS,SAASC,GAAG,CAAEC,OAAO,CAAE,CACnB,MAAO,CAAAC,KAAK,CAACF,GAAG,CAAEC,OAAO,CAAC,CAACE,IAAI,CAAC,IAAI,CAACZ,cAAc,CAAC,CACxD,CAGA;AAAA,GAAAF,GAAA,gBAAAC,KAAA,CACA,SAAAc,aAAaC,IAAI,CAAE,CACf,GAAM,CAAAC,QAAQ,CAAGD,IAAI,CAACE,KAAK,CAC3B,GAAM,CAAAC,WAAW,CAAGH,IAAI,CAACI,QAAQ,CACjC,MAAO,KAAI,CAACV,QAAQ,IAAAF,MAAA,CAAI,IAAI,CAACV,OAAO,YAAW,CAC3CuB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjB,UAAU,CAAEN,WAAW,CACvB,OAAO,CAAEF,QACb,CAAC,CACL,CAAC,CAAC,CACN,CAGA;AAAA,GAAAjB,GAAA,iBAAAC,KAAA,CACA,SAAAyB,cAAcN,QAAQ,CAAEF,KAAK,CAAE,CAC3B,MAAO,KAAI,CAACR,QAAQ,IAAAF,MAAA,CAAI,IAAI,CAACV,OAAO,YAAW,CAC3CuB,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,QAAQ,CAAE,kBAAkB,CAC5B,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACL,QAAQ,CAARA,QAAQ,CAAEF,KAAK,CAALA,KAAK,CAAC,CAC1C,CAAC,CAAC,CACN,CAGA;AAAA,GAAAlB,GAAA,sBAAAC,KAAA,CACA,SAAA0B,mBAAmBC,KAAK,CAAE,CACtB,MAAO,KAAI,CAAClB,QAAQ,IAAAF,MAAA,CAAI,IAAI,CAACV,OAAO,cAAa,CAC7CuB,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,eAAe,WAAAd,MAAA,CAAYoB,KAAK,CACpC,CACJ,CAAC,CAAC,CACN,CAAC,WAAAjC,iBAAA,KAIL,GAAM,CAAAkC,UAAU,CAAG,GAAI,CAAAlC,iBAAiB,CAAC,CACrCG,OAAO,CAAE,+BACb,CAAC,CAAC,CAEF,OAAS+B,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}