{"ast":null,"code":"import _classCallCheck from\"C:/Users/\\u0410\\u0440\\u0438\\u043D\\u0430/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/\\u0410\\u0440\\u0438\\u043D\\u0430/react-mesto-api-full-gha/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(data){_classCallCheck(this,Api);this.baseUrl=data.baseUrl;this.headers=data.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}},{key:\"_request\",value:function _request(url,options){return fetch(url,options).then(this._checkResponse);}//получение карточек с сервера\n},{key:\"getInitialCards\",value:function getInitialCards(){return this._request(\"\".concat(this.baseUrl,\"cards\"),{method:'GET',headers:this.headers});}//получения информации о пользователе с сервера\n},{key:\"getUserInfo\",value:function getUserInfo(){return this._request(\"\".concat(this.baseUrl,\"users/me\"),{method:'GET',headers:this.headers});}//изменение информации о пользователе\n},{key:\"changeUserInfo\",value:function changeUserInfo(newInfo){var newName=newInfo.name;var newDescription=newInfo.description;return this._request(\"\".concat(this.baseUrl,\"users/me\"),{method:'PATCH',headers:this.headers,body:JSON.stringify({name:newName,about:newDescription})});}//изменение аватара пользователя\n},{key:\"changeAvatar\",value:function changeAvatar(newInfo){var newAvatar=newInfo.avatar;return this._request(\"\".concat(this.baseUrl,\"users/me/avatar\"),{method:'PATCH',headers:this.headers,body:JSON.stringify({avatar:newAvatar})});}//добавление новой карточки\n},{key:\"addNewCard\",value:function addNewCard(newCard){var cardName=newCard.name;var cardLink=newCard.link;return this._request(\"\".concat(this.baseUrl,\"cards\"),{method:'POST',headers:this.headers,body:JSON.stringify({name:cardName,link:cardLink})});}//удаление карточки\n},{key:\"deleteCard\",value:function deleteCard(cardId){return this._request(\"\".concat(this.baseUrl,\"cards/\").concat(cardId),{method:'DELETE',headers:this.headers});}//поставить лайк\n},{key:\"setLike\",value:function setLike(cardId){return this._request(\"\".concat(this.baseUrl,\"cards/\").concat(cardId,\"/likes\"),{method:'PUT',headers:this.headers});}//убрать лайк\n},{key:\"removeLike\",value:function removeLike(cardId){return this._request(\"\".concat(this.baseUrl,\"cards/\").concat(cardId,\"/likes\"),{method:'DELETE',headers:this.headers});}}]);return Api;}();;var newApi=new Api({baseUrl:'https://api.rin.dz.nomoredomains.rocks/'//baseUrl: 'https://nomoreparties.co/v1/cohort-60/',\n//headers: {\n//authorization: '9d97c533-6f82-4668-9816-7bf0cf3c6ccd',\n//'Content-Type': 'application/json'\n//}\n});export{newApi};","map":{"version":3,"names":["Api","data","_classCallCheck","baseUrl","headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","_request","url","options","fetch","then","getInitialCards","method","getUserInfo","changeUserInfo","newInfo","newName","name","newDescription","description","body","JSON","stringify","about","changeAvatar","newAvatar","avatar","addNewCard","newCard","cardName","cardLink","link","deleteCard","cardId","setLike","removeLike","newApi"],"sources":["C:/Users/Арина/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\r\n  constructor(data) {\r\n    this.baseUrl = data.baseUrl;\r\n    this.headers = data.headers;\r\n  }\r\n\r\n  _checkResponse(res) {\r\n    if (res.ok) {\r\n      return res.json()\r\n    } else {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n  }\r\n\r\n\r\n  _request(url, options) {\r\n    return fetch(url, options).then(this._checkResponse)\r\n  }\r\n\r\n\r\n  //получение карточек с сервера\r\n  getInitialCards() {\r\n    return this._request(`${this.baseUrl}cards`, {\r\n      method: 'GET',\r\n      headers: this.headers\r\n    })\r\n  }\r\n\r\n  //получения информации о пользователе с сервера\r\n  getUserInfo() {\r\n    return this._request(`${this.baseUrl}users/me`, {\r\n      method: 'GET',\r\n      headers: this.headers\r\n    })\r\n  }\r\n\r\n  //изменение информации о пользователе\r\n  changeUserInfo(newInfo) {\r\n    const newName = newInfo.name;\r\n    const newDescription = newInfo.description;\r\n    return this._request(`${this.baseUrl}users/me`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: newName,\r\n        about: newDescription\r\n      })\r\n    })\r\n  }\r\n\r\n  //изменение аватара пользователя\r\n  changeAvatar(newInfo) {\r\n    const newAvatar = newInfo.avatar;\r\n    return this._request(`${this.baseUrl}users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        avatar: newAvatar\r\n      })\r\n    })\r\n  }\r\n\r\n  //добавление новой карточки\r\n  addNewCard(newCard) {\r\n    const cardName = newCard.name;\r\n    const cardLink = newCard.link;\r\n    return this._request(`${this.baseUrl}cards`, {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({\r\n        name: cardName,\r\n        link: cardLink\r\n      })\r\n    })\r\n  }\r\n\r\n  //удаление карточки\r\n  deleteCard(cardId) {\r\n    return this._request(`${this.baseUrl}cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    })\r\n  }\r\n\r\n  //поставить лайк\r\n  setLike(cardId) {\r\n    return this._request(`${this.baseUrl}cards/${cardId}/likes`, {\r\n      method: 'PUT',\r\n      headers: this.headers\r\n    })\r\n  }\r\n\r\n  //убрать лайк\r\n  removeLike(cardId) {\r\n    return this._request(`${this.baseUrl}cards/${cardId}/likes`, {\r\n      method: 'DELETE',\r\n      headers: this.headers\r\n    })\r\n  }\r\n};\r\n\r\nconst newApi = new Api({\r\n  baseUrl: 'https://api.rin.dz.nomoredomains.rocks/'\r\n  //baseUrl: 'https://nomoreparties.co/v1/cohort-60/',\r\n  //headers: {\r\n    //authorization: '9d97c533-6f82-4668-9816-7bf0cf3c6ccd',\r\n    //'Content-Type': 'application/json'\r\n  //}\r\n})\r\n\r\nexport { newApi };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}